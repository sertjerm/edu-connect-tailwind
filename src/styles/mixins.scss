// src/styles/mixins.scss
// @import 'variables';
@use './variables' as *;


// =======================================
// üì± Responsive Mixins
// =======================================

// Mobile First Approach
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'xs' {
    @media (min-width: #{$breakpoint-xs}) { @content; }
  }
  @if $breakpoint == 'sm' {
    @media (min-width: #{$breakpoint-sm}) { @content; }
  }
  @if $breakpoint == 'md' {
    @media (min-width: #{$breakpoint-md}) { @content; }
  }
  @if $breakpoint == 'lg' {
    @media (min-width: #{$breakpoint-lg}) { @content; }
  }
  @if $breakpoint == 'xl' {
    @media (min-width: #{$breakpoint-xl}) { @content; }
  }
  @if $breakpoint == '2xl' {
    @media (min-width: #{$breakpoint-2xl}) { @content; }
  }
}

// Max-width media queries
@mixin respond-to-max($breakpoint) {
  @if $breakpoint == 'xs' {
    @media (max-width: #{$breakpoint-xs - 1px}) { @content; }
  }
  @if $breakpoint == 'sm' {
    @media (max-width: #{$breakpoint-sm - 1px}) { @content; }
  }
  @if $breakpoint == 'md' {
    @media (max-width: #{$breakpoint-md - 1px}) { @content; }
  }
  @if $breakpoint == 'lg' {
    @media (max-width: #{$breakpoint-lg - 1px}) { @content; }
  }
  @if $breakpoint == 'xl' {
    @media (max-width: #{$breakpoint-xl - 1px}) { @content; }
  }
  @if $breakpoint == '2xl' {
    @media (max-width: #{$breakpoint-2xl - 1px}) { @content; }
  }
}

// Between breakpoints
@mixin respond-between($min, $max) {
  @media (min-width: #{$min}) and (max-width: #{$max - 1px}) {
    @content;
  }
}

// =======================================
// üé® Glass Morphism Effects
// =======================================

@mixin glass-effect($opacity: 0.2, $blur: 16px, $border: rgba(255, 255, 255, 0.2)) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  border: 1px solid $border;
  box-shadow: $shadow-glass;
}

@mixin glass-card($padding: $spacing-lg) {
  @include glass-effect();
  border-radius: $radius-3xl;
  padding: $padding;
}

@mixin glass-button($opacity: 0.2) {
  @include glass-effect($opacity, 10px);
  border-radius: $radius-lg;
  transition: all $transition-normal $ease-in-out;
  
  &:hover {
    background: rgba(255, 255, 255, $opacity + 0.1);
    transform: translateY(-2px);
    box-shadow: $shadow-glow-purple;
  }
  
  &:active {
    transform: translateY(0);
  }
}

// =======================================
// üìù Typography Mixins
// =======================================

@mixin thai-text($size: 'base', $weight: $font-normal) {
  font-family: $font-family-thai;
  line-height: $line-height-normal;
  font-weight: $weight;
  
  @if $size == 'xs' {
    font-size: $font-thai-xs;
  } @else if $size == 'sm' {
    font-size: $font-thai-sm;
  } @else if $size == 'base' {
    font-size: $font-thai-base;
  } @else if $size == 'lg' {
    font-size: $font-thai-lg;
  } @else if $size == 'xl' {
    font-size: $font-thai-xl;
  } @else if $size == '2xl' {
    font-size: $font-thai-2xl;
  } @else if $size == '3xl' {
    font-size: $font-thai-3xl;
  }
}

@mixin heading($size: 'lg', $weight: $font-semibold) {
  @include thai-text($size, $weight);
  color: white;
  margin-bottom: $spacing-md;
}

@mixin truncate-text($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// =======================================
// üé≠ Animation Mixins
// =======================================

@mixin fade-in($duration: $transition-normal, $delay: 0s) {
  animation: fadeIn $duration $ease-out $delay both;
}

@mixin slide-up($duration: $transition-normal, $delay: 0s) {
  animation: slideUp $duration $ease-out $delay both;
}

@mixin bounce-gentle($duration: 2s, $delay: 0s) {
  animation: bounceGentle $duration $ease-bounce $delay infinite;
}

@mixin float($duration: 3s) {
  animation: float $duration $ease-in-out infinite;
}

@mixin shimmer-effect {
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transform: translateX(-100%);
    animation: shimmer 2s infinite;
  }
}

// =======================================
// üîß Utility Mixins
// =======================================

@mixin center-flex($direction: row) {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: $direction;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin full-size {
  width: 100%;
  height: 100%;
}

@mixin aspect-ratio($width, $height) {
  aspect-ratio: $width / $height;
}

@mixin custom-scrollbar($thumb-color: rgba(255, 255, 255, 0.3), $track-color: transparent) {
  scrollbar-width: thin;
  scrollbar-color: $thumb-color $track-color;
  
  &::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $radius-full;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $radius-full;
    
    &:hover {
      background: rgba(255, 255, 255, 0.5);
    }
  }
}

// =======================================
// üéØ Component-specific Mixins
// =======================================

@mixin button-variant($variant: 'primary') {
  @include thai-text('sm', $font-medium);
  padding: $spacing-sm $spacing-lg;
  border-radius: $radius-lg;
  transition: all $transition-normal $ease-in-out;
  border: none;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $spacing-sm;
  
  @if $variant == 'primary' {
    background: linear-gradient(135deg, $primary-500, $primary-600);
    color: white;
    
    &:hover {
      background: linear-gradient(135deg, $primary-600, $primary-700);
      transform: translateY(-2px);
      box-shadow: $shadow-glow-purple;
    }
  } @else if $variant == 'secondary' {
    background: linear-gradient(135deg, $secondary-400, $secondary-500);
    color: white;
    
    &:hover {
      background: linear-gradient(135deg, $secondary-500, $secondary-500);
      transform: translateY(-2px);
      box-shadow: $shadow-glow-blue;
    }
  } @else if $variant == 'glass' {
    @include glass-button();
    color: white;
  }
  
  &:active {
    transform: translateY(0);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none !important;
  }
}

@mixin card-hover-effect {
  transition: all $transition-normal $ease-in-out;
  
  &:hover {
    transform: translateY(-8px);
    box-shadow: $shadow-xl, $shadow-glow-purple;
  }
}

// =======================================
// üé¨ Keyframe Animations
// =======================================

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes bounceGentle {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}